{"version":3,"sources":["webpack:///./src/components/statusPage.js","webpack:///./node_modules/@material-ui/core/esm/List/List.js","webpack:///./src/components/cardList.js"],"names":["statusPage","pageContext","data","authors","to","posts","props","ref","children","classes","className","_props$component","component","Component","_props$dense","dense","_props$disablePadding","disablePadding","subheader","other","context","ListContext","Provider","value","root","padding","withStyles","listStyle","margin","position","paddingTop","paddingBottom","name","PostList","styled","List","display","CardList","console","log","map","post","index","key","id","fields","author","filter"],"mappings":"2FAAA,oEAmBeA,UAZI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OACE,kBAAC,IAAD,KACE,oCACA,kBAAC,OAAD,CAAMC,GAAI,KAAV,WACA,kBAAC,IAAD,CAAUC,MAAOH,EAAMC,QAASA,Q,yJCiBlC,EAAO,cAAiB,SAAcG,EAAOC,GAC/C,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBC,OAAiC,IAArBF,EAA8B,KAAOA,EACjDG,EAAeR,EAAMS,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAwBV,EAAMW,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAYZ,EAAMY,UAClBC,EAAQ,YAAyBb,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,iBAAkB,cAErHc,EAAU,WAAc,WAC1B,MAAO,CACLL,MAAOA,KAER,CAACA,IACJ,OAAoB,gBAAoBM,EAAA,EAAYC,SAAU,CAC5DC,MAAOH,GACO,gBAAoBP,EAAW,YAAS,CACtDH,UAAW,YAAKD,EAAQe,KAAMd,EAAWK,GAASN,EAAQM,OAAQE,GAAkBR,EAAQgB,QAASP,GAAaT,EAAQS,WAC1HX,IAAKA,GACJY,GAAQD,EAAWV,OA0CT,SAAAkB,EAAA,GAxFK,CAElBF,KAAM,CACJG,UAAW,OACXC,OAAQ,EACRH,QAAS,EACTI,SAAU,YAIZJ,QAAS,CACPK,WAAY,EACZC,cAAe,GAIjBhB,MAAO,GAGPG,UAAW,CACTY,WAAY,IAoEkB,CAChCE,KAAM,WADO,CAEZ,G,YC1FGC,EAAWC,YAAOC,EAAPD,CAAa,CAC5B,aAAc,OACXN,OAAQ,EACRQ,QAAS,OACT,YAAa,OACbX,QAAS,IAeCY,IAZE,SAAA/B,GACfgC,QAAQC,IAAIjC,GAEZ,OACE,oCACE,kBAAC2B,EAAD,KACG3B,EAAMD,MAAMmC,KAAI,SAACC,EAAMC,GAAP,OAAkB,kBAAC,IAAD,eAAUC,IAAKF,EAAKG,IAApB,iBAAgCH,EAAKI,OAArC,GAAgD,CAACH,MAAOA,EAAOI,QAJrFF,EAIwGH,EAAKI,OAAOC,OAAO,GAJrHxC,EAAMH,QAAQ4C,QAAO,SAAAD,GAAM,OAAIA,EAAOF,KAAOA,UAAnD,IAAAA","file":"component---src-components-status-page-js-a6591c48bed23c7f3e0a.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport CardList from '../components/cardList';\n\n\nconst statusPage = ({ pageContext }) => {\n  const { data, authors } = pageContext;\n  return (\n    <Layout>\n      <>\n      <Link to={'/'}>to Home</Link>\n      <CardList posts={data} authors={authors} />\n      </>\n    </Layout>\n  )\n};\n\nexport default statusPage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from './ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0,\n    position: 'relative'\n  },\n\n  /* Styles applied to the root element if `disablePadding={false}`. */\n  padding: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n\n  /* Styles applied to the root element if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if a `subheader` is provided. */\n  subheader: {\n    paddingTop: 0\n  }\n};\nvar List = React.forwardRef(function List(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disablePadding = props.disablePadding,\n      disablePadding = _props$disablePadding === void 0 ? false : _props$disablePadding,\n      subheader = props.subheader,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"dense\", \"disablePadding\", \"subheader\"]);\n\n  var context = React.useMemo(function () {\n    return {\n      dense: dense\n    };\n  }, [dense]);\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, dense && classes.dense, !disablePadding && classes.padding, subheader && classes.subheader),\n    ref: ref\n  }, other), subheader, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? List.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used for\n   * the list and list items.\n   * The prop is available to descendant components as the `dense` context.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, vertical padding will be removed from the list.\n   */\n  disablePadding: PropTypes.bool,\n\n  /**\n   * The content of the subheader, normally `ListSubheader`.\n   */\n  subheader: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiList'\n})(List);","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\n\nimport CardNews from './card';\n\nconst PostList = styled(List)({\n  'list-style': 'none',\n     margin: 0,\n     display: 'flex',\n     'flex-wrap': 'wrap',\n     padding: 0\n});\n\nconst CardList = props => {\n  console.log(props);\n  const findAuthor = id => props.authors.filter(author => author.id === id)\n  return (\n    <>\n      <PostList>\n        {props.posts.map((post, index) =>  <CardNews key={post.id} {...{...post.fields, ...{index: index, author: findAuthor(post.fields.author[0])}}}/>)}\n      </PostList>\n    </>\n  );\n}\n\nexport default CardList;"],"sourceRoot":""}